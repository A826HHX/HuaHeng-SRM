<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hh.pms.mapper.RequirementTableMapper">
    
    <resultMap type="RequirementTable" id="RequirementTableResult">
        <result property="requirementId"    column="requirement_id"    />
        <result property="requirementType"    column="requirement_type"    />
    </resultMap>

    <sql id="selectRequirementTableVo">
        select requirement_id, requirement_type from requirement_table
    </sql>

    <select id="selectRequirementTableList" parameterType="RequirementTable" resultMap="RequirementTableResult">
        <include refid="selectRequirementTableVo"/>
        <where>  
            <if test="requirementType != null  and requirementType != ''"> and requirement_type = #{requirementType}</if>
        </where>
    </select>
    
    <select id="selectRequirementTableByRequirementId" parameterType="Long" resultMap="RequirementTableResult">
        <include refid="selectRequirementTableVo"/>
        where requirement_id = #{requirementId}
    </select>
        
    <insert id="insertRequirementTable" parameterType="RequirementTable" useGeneratedKeys="true" keyProperty="requirementId">
        insert into requirement_table
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="requirementType != null">requirement_type,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="requirementType != null">#{requirementType},</if>
         </trim>
    </insert>

    <update id="updateRequirementTable" parameterType="RequirementTable">
        update requirement_table
        <trim prefix="SET" suffixOverrides=",">
            <if test="requirementType != null">requirement_type = #{requirementType},</if>
        </trim>
        where requirement_id = #{requirementId}
    </update>

    <delete id="deleteRequirementTableByRequirementId" parameterType="Long">
        delete from requirement_table where requirement_id = #{requirementId}
    </delete>

    <delete id="deleteRequirementTableByRequirementIds" parameterType="String">
        delete from requirement_table where requirement_id in 
        <foreach item="requirementId" collection="array" open="(" separator="," close=")">
            #{requirementId}
        </foreach>
    </delete>
</mapper>